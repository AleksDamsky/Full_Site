@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100&display=swap');
* {
    font-family: 'Montserrat', sans-serif;
    box-sizing: border-box; // box-sizing == определяет как вычисляется общая ширина и высота элемента; border-box ==  говорит браузеру учитывать любые границы и внутренние отступы в значениях, которые вы указываете в ширине и высоте элемента.
    font-weight: normal;
}

body {
   color: rgb(211, 182, 146);
   background: rgb(57, 61, 57);
   text-align: center;
    
}

.LOGO {
    z-index: 1000%;
}

.intr {
    display: flex;
    justify-content: space-between;
    padding-top: 20px;
}

.logo {
    color: rgb(255, 255, 255);
    padding-top: 0px;
    padding-left: 40px;

}


.nav_link {
    display: inline-block;
    vertical-align: top;
    margin: 0 10px;
    color: aliceblue;
    text-decoration: none;
    align-items: center;
}

.nav_link:hover {
    color: #f17c7c;
    transition: color .2s linear;
}

.container, .container2 {
    display: flex;
    justify-content:space-between;
    padding: 0;
    margin-top: 2em;
}


.word {
    perspective: 1000px; 
    margin-top: 50px;
    z-index: 1000;
}

.span {
    cursor: pointer;
    display: inline-block;
    font-size: 70px;
    user-select: none;
    line-height: .8;
    padding: 6px;
    color: #f17c7c;
    text-shadow: 4px 3px 3px #c58787;
}

.span:nth-child(1).active {
    animation: balance 1.5s ease-out;
    transform-origin: bottom left;
}
@keyframes balance {
    0%, 100% {
        transform: rotate(0deg);
    }
    
    30%, 60% {
        transform: rotate(-45deg);
    }
}
.span:nth-child(2){
    font-size: 50px;
}
.span:nth-child(2).active {
    animation: shrinkjump 1s ease-in-out;
    transform-origin: bottom center;
}

@keyframes shrinkjump {
    10%, 35% {
        transform: scale(2, .2) translate(0, 0);
    }
    
    45%, 50% {
        transform: scale(1) translate(0, -150px);
    }
    
    80% {
        transform: scale(1) translate(0, 0);
    }
}

.word span:nth-child(3).active {
    animation: falling 2s ease-out;
    transform-origin: bottom center;
}

@keyframes falling {
    12% {
        transform: rotateX(240deg);
    }
    
    24% {
        transform: rotateX(150deg);
    }
    
    36% {
        transform: rotateX(200deg);
    }
    
    48% {
        transform: rotateX(175deg);
    }
    
    60%, 85% {
        transform: rotateX(180deg);
    }
    
    100% {
        transform: rotateX(0deg);
    }
}
.span:nth-child(4) {
    font-size: 55px;
}

.word span:nth-child(4).active {
    animation: rotate 1s ease-out;
}

@keyframes rotate {
    20%, 80% {
        transform: rotateY(180deg);
    }
    
    100% {
        transform: rotateY(360deg);
    }
}

.word span:nth-child(5).active {
    animation: toplong 1.5s linear;
}

@keyframes toplong {
    10%, 40% {
        transform: translateY(-48vh) scaleY(1);
    }
    
    90% {
        transform: translateY(-48vh) scaleY(4);
    }
}

.flip {
    position: relative;//Положение элемента устанавливается относительно его исходного места. Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
    >.front,
    >.back {
        display: block;
        transition-timing-function: cubic-bezier(.175, .885, .32, 1.275);
        transition-duration: .5s;
        transition-property: transform, opacity;
    }
    >.front {
        transform: rotateY(0deg);
    }
    >.back {
        position: absolute;
        opacity: 0;
        top: 0px;
        left: 0px;
        width: 100%;
        height: 100%;
        transform: rotateY(-180deg);
    }
    &:hover {
        >.front {
            transform: rotateY(180deg);
        }
        >.back {
            opacity: 1;
            transform: rotateY(0deg);
        }
    }
    &.flip-vertical {
        >.back {
            transform: rotateX(-180deg);
        }
        &:hover {
            >.front {
                transform: rotateX(180deg);
            }
            >.back {
                transform: rotateX(0deg);
            }
        }
    }
}

/*customize*/
.flip {
    display: block;
    justify-content: space-between;
    margin-right: 2px;
    margin-bottom: 1em;
    width: 400px;
    padding-bottom: 2em;
    >.front,
    >.back {
      display: block;
      color: white;
      width: inherit;
      background-size: cover!important;
      background-position: center!important;
      height: 220px;
      padding: 1em 2em;
      background: #313131;
      border-radius: 10px;
      p {
        font-size: 0.9125rem;
        line-height: 160%;
        color: #999;
        padding-top: 0;
      }
    }
}

.akkond {
    padding-left: 10em;
}

.eco {
    padding-left: 10em;
}

.text-shadow {
    text-shadow: 1px 1px rgba(0, 0, 0, 0.04), 2px 2px rgba(0, 0, 0, 0.04), 3px 3px rgba(0, 0, 0, 0.04), 4px 4px rgba(0, 0, 0, 0.04), 0.125rem 0.125rem rgba(0, 0, 0, 0.04), 6px 6px rgba(0, 0, 0, 0.04), 7px 7px rgba(0, 0, 0, 0.04), 8px 8px rgba(0, 0, 0, 0.04), 9px 9px rgba(0, 0, 0, 0.04), 0.3125rem 0.3125rem rgba(0, 0, 0, 0.04), 11px 11px rgba(0, 0, 0, 0.04), 12px 12px rgba(0, 0, 0, 0.04), 13px 13px rgba(0, 0, 0, 0.04), 14px 14px rgba(0, 0, 0, 0.04), 0.625rem 0.625rem rgba(0, 0, 0, 0.04), 16px 16px rgba(0, 0, 0, 0.04), 17px 17px rgba(0, 0, 0, 0.04), 18px 18px rgba(0, 0, 0, 0.04), 19px 19px rgba(0, 0, 0, 0.04), 1.25rem 1.25rem rgba(0, 0, 0, 0.04);
    }
    

 .flip1 {
        position: relative;//Положение элемента устанавливается относительно его исходного места. Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
        >.front1,
        >.back1 {
            display: block;
            transition-timing-function: cubic-bezier(.175, .885, .32, 1.275);
            transition-duration: .5s;
            transition-property: transform, opacity;
        }
        >.front1 {
            transform: rotateY(0deg);
        }
        >.back1 {
            position: absolute;
            opacity: 0;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
            transform: rotateY(-180deg);
        }
        &:hover {
            >.front1 {
                transform: rotateY(180deg);
            }
            >.back1 {
                opacity: 1;
                transform: rotateY(0deg);
            }
        }
        &.flip1-vertical {
            >.back1 {
                transform: rotateX(-180deg);
            }
            &:hover {
                >.front1 {
                    transform: rotateX(180deg);
                }
                >.back1 {
                    transform: rotateX(0deg);
                }
            }
        }
        .flip1 {
            position: relative;//Положение элемента устанавливается относительно его исходного места. Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
            >.front1,
            >.back1 {
                display: block;
                transition-timing-function: cubic-bezier(.175, .885, .32, 1.275);
                transition-duration: .5s;
                transition-property: transform, opacity;
            }
            >.front1 {
                transform: rotateY(0deg);
            }
            >.back1 {
                position: absolute;
                opacity: 0;
                top: 0px;
                left: 0px;
                width: 100%;
                height: 100%;
                transform: rotateY(-180deg);
            }
            &:hover {
                >.front1 {
                    transform: rotateY(180deg);
                }
                >.back1 {
                    opacity: 1;
                    transform: rotateY(0deg);
                }
            }
            &.flip1-vertical {
                >.back {
                    transform: rotateX(-180deg);
                }
                &:hover {
                    >.front1 {
                        transform: rotateX(180deg);
                    }
                    >.back1 {
                        transform: rotateX(0deg);
                    }
                }
            }
        }  }    